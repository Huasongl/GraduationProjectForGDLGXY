package com.gdlgxy.internshipcommunity.module.homeimport retrofit2.Retrofitimport retrofit2.converter.gson.GsonConverterFactoryimport retrofit2.http.GETimport retrofit2.http.Queryinterface Service {    @GET("search/repositories?sort=starts&q=Android")    suspend fun searchReposAndroid(@Query("page") page: Int, @Query("per_page") perPage: Int): HomeResponse    @GET("search/repositories?sort=starts&q=Java")    suspend fun searchReposJava(@Query("page") page: Int, @Query("per_page") perPage: Int): HomeResponse    @GET("search/repositories?sort=starts&q=C")    suspend fun searchReposC(@Query("page") page: Int, @Query("per_page") perPage: Int): HomeResponse    @GET("search/repositories?sort=starts&q=Kotlin")    suspend fun searchReposKotlin(@Query("page") page: Int, @Query("per_page") perPage: Int): HomeResponse    companion object {        private const val BASE_URL = "https://api.github.com/"        fun create(): Service {            return Retrofit.Builder()                .baseUrl(BASE_URL)                .addConverterFactory(GsonConverterFactory.create())                .build()                .create(Service::class.java)        }    }}
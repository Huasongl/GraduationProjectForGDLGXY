package com.gdlgxy.internshipcommunity.module.home;import android.content.res.ColorStateList;import android.graphics.Color;import android.graphics.Typeface;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.gdlgxy.internshipcommunity.base.BaseFragment;import com.gdlgxy.internshipcommunity.databinding.FgHomeContainerBinding;import com.gdlgxy.navannotationmodule.FragmentDestination;import com.google.android.material.tabs.TabLayout;import com.google.android.material.tabs.TabLayoutMediator;import java.util.List;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.lifecycle.LifecycleOwner;import androidx.lifecycle.Observer;import androidx.lifecycle.ViewModelProvider;import androidx.viewpager2.widget.ViewPager2;@FragmentDestination(pageUrl = "main/module/home", asStarter = true)public class HomeFgContainer extends BaseFragment<FgHomeContainerBinding,HomeFgViewModel> {    private ViewPager2 mPageContainer;    private TabLayout mTabContainer;    private TabLayoutMediator mTabMediator;    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        mPageContainer = mView.homeFgContainerViewPager;        mTabContainer = mView.homeFgContainerTabLayout;        mViewModel.requestTabData();        mPageContainer.setAdapter(new TopTabAdapter(mViewModel.getTabItemLiveData().getValue(),                getChildFragmentManager(),getLifecycle()));        mViewModel.getTabLiveData().observe(getViewLifecycleOwner(), new Observer<HomeTabData>() {            @Override            public void onChanged(HomeTabData homeTabData) {                mTabContainer.setTabGravity(homeTabData.tabGravity);            }        });        mTabMediator = new TabLayoutMediator(mTabContainer, mPageContainer, true, new TabLayoutMediator.TabConfigurationStrategy() {            @Override            public void onConfigureTab(@NonNull TabLayout.Tab tab, int position) {                tab.setCustomView(makeTabView(position));            }        });        mTabMediator.attach();        mPageContainer.registerOnPageChangeCallback(mPageChangeCallback);        mPageContainer.post(() ->                mPageContainer.setCurrentItem(                        mViewModel.getTabLiveData().getValue().select, false));    }    ViewPager2.OnPageChangeCallback mPageChangeCallback = new ViewPager2.OnPageChangeCallback() {        @Override        public void onPageSelected(int position) {            int tabCount = mTabContainer.getTabCount();            for (int i = 0; i < tabCount; i++) {                TabLayout.Tab tab = mTabContainer.getTabAt(i);                TextView customView = (TextView) tab.getCustomView();                if (tab.getPosition() == position) {                    customView.setTextSize(mViewModel.getTabLiveData().getValue().activeSize);                    customView.setTypeface(Typeface.DEFAULT_BOLD);                } else {                    customView.setTextSize(mViewModel.getTabLiveData().getValue().normalSize);                    customView.setTypeface(Typeface.DEFAULT);                }            }        }    };    private View makeTabView(int position) {        List<HomeTabData.Tabs> tabItemData = mViewModel.getTabItemLiveData().getValue();        HomeTabData tabData = mViewModel.getTabLiveData().getValue();        TextView tabView = new TextView(getContext());        int[][] states = new int[2][];        states[0] = new int[]{android.R.attr.state_selected};        states[1] = new int[]{};        int[] colors = new int[]{Color.parseColor(tabData.activeColor), Color.parseColor(tabData.normalColor)};        ColorStateList stateList = new ColorStateList(states, colors);        tabView.setTextColor(stateList);        tabView.setText(tabItemData.get(position).title);        tabView.setTextSize(tabData.normalSize);        return tabView;    }    @Override    protected HomeFgViewModel createdViewModel() {        return ViewModelProvider.NewInstanceFactory.getInstance().create(HomeFgViewModel.class);    }    @Override    public String getPageName() {        return null;    }    @Override    public FgHomeContainerBinding inflate_Fragment(LayoutInflater layoutInflater, ViewGroup container, boolean at) {        return FgHomeContainerBinding.inflate(layoutInflater,container,at);    }}
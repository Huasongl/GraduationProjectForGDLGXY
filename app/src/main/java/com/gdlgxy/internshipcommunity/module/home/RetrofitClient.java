package com.gdlgxy.internshipcommunity.module.home;import java.io.IOException;import androidx.annotation.NonNull;import okhttp3.HttpUrl;import okhttp3.Interceptor;import okhttp3.OkHttpClient;import okhttp3.Request;import okhttp3.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;public class RetrofitClient {    private static final String BASE_URL = "https://api.github.com/";    private static final String API_KEY = "*********";    private static RetrofitClient sRetrofitClient;    private Retrofit mRetrofit;    private RetrofitClient() {        mRetrofit = new Retrofit.Builder()                .baseUrl(BASE_URL)                .addConverterFactory(GsonConverterFactory.create())                .build();    }    public static synchronized RetrofitClient getInstance(){        if (sRetrofitClient == null){            sRetrofitClient = new RetrofitClient();        }        return sRetrofitClient;    }////    public Api getApi() {//        return mRetrofit.create(Api.class);//    }    private OkHttpClient getClient(){        OkHttpClient.Builder httpClient = new OkHttpClient.Builder();        httpClient.addInterceptor(new Interceptor() {            @NonNull            @Override            public Response intercept(@NonNull Chain chain) throws IOException {                Request original = chain.request();                HttpUrl originalHttpUrl = original.url();                HttpUrl url = originalHttpUrl.newBuilder()                        .addQueryParameter("apikey",API_KEY)                        .build();                Request.Builder requestBuilder = original.newBuilder().url(url);                Request request = requestBuilder.build();                return chain.proceed(request);            }        });        return httpClient.build();    }}